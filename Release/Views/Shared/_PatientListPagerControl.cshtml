@{
    int totalPages = ViewBag.TotalPagesCount;
    int pageIndex = ViewBag.PageNumber;
    int totalRecordCount = ViewBag.TotalRecordCount;
    int modalRecordCount = ViewBag.ModalRecordCount - 1;
    int pageSize = 0;
    bool IsExternalComms = false;
    bool IsBreathing = false;
    bool IsLevelOfCare = false;
    bool IsNewPositive = false;
    bool IsPostiveBacklog = false;
    bool IsPositiveBacklogPending = false;
    bool IsPositiveLive = false;
    bool IsPositiveLivePending = false;
    bool IsDischargeDeath = false;
    bool IsDischargeDeathBacklog = false;
    bool IsDischargeDeathBacklogPending = false;
    bool IsDischargeDeathLive = false;
    bool IsDischargeDeathLivePending = false;
    bool IsDeathYTD = false;
    bool IsDeathYTDPending = false;
    bool IsDeathDetected = false;
    bool IsDeathDetectedPending = false;
    bool IsDeathDiagnosed = false;
    bool IsDeathDiagnosedPending = false;
    bool IsDeathReAdmission = false;
    bool IsDeathReAdmissionPending = false;
    bool NoOxygen = false;
    bool Oxygen = false;
    bool NonInvasiveVentilation = false;
    bool MechanicalVentilation = false;
    bool NotUpdatedAtAll = false;
    string PatientLocation = "";
    bool IsCurrentIPCount = false;
    bool IsNotUpdatedLast20HoursCount = false;
    bool IsNotUpdatedLast12HoursCount = false;
    bool IsUpdatedLast12HoursCount = false;

    string sortcolumn = "";

    pageSize = Convert.ToInt32(Session["PatientListPageSize"]);
    sortcolumn = Convert.ToString(Session["PatientListColumn"]);
    IsExternalComms = Convert.ToBoolean(Session["IsExternalComms"]);
    IsBreathing = Convert.ToBoolean(Session["IsBreathing"]);
    IsLevelOfCare = Convert.ToBoolean(Session["IsLevelOfCare"]);
    PatientLocation = Convert.ToString(Session["PatientLocation"]);
    IsCurrentIPCount = Convert.ToBoolean(Session["IsCurrentIPCount"]);
    IsNotUpdatedLast20HoursCount = Convert.ToBoolean(Session["IsNotUpdatedLast20HoursCount"]);
    IsNotUpdatedLast12HoursCount = Convert.ToBoolean(Session["IsNotUpdatedLast12HoursCount"]);
    IsUpdatedLast12HoursCount = Convert.ToBoolean(Session["IsUpdatedLast12HoursCount"]);
    NoOxygen = Convert.ToBoolean(Session["NoOxygen"]);
    Oxygen = Convert.ToBoolean(Session["Oxygen"]);
    NonInvasiveVentilation = Convert.ToBoolean(Session["NonInvasiveVentilation"]);
    MechanicalVentilation = Convert.ToBoolean(Session["MechanicalVentilation"]);
    NotUpdatedAtAll = Convert.ToBoolean(Session["NotUpdatedAtAll"]);
    IsNewPositive = Convert.ToBoolean(Session["IsNewPositive"]);
    IsPostiveBacklog = Convert.ToBoolean(Session["IsPostiveBacklog"]);
    IsPositiveBacklogPending = Convert.ToBoolean(Session["IsPositiveBacklogPending"]);
    IsPositiveLive = Convert.ToBoolean(Session["IsPositiveLive"]);
    IsPositiveLivePending = Convert.ToBoolean(Session["IsPositiveLivePending"]);
    IsDischargeDeath = Convert.ToBoolean(Session["IsDischargeDeath"]);
    IsDischargeDeathBacklog = Convert.ToBoolean(Session["IsDischargeDeathBacklog"]);
    IsDischargeDeathBacklogPending = Convert.ToBoolean(Session["IsDischargeDeathBacklogPending"]);
    IsDischargeDeathLive = Convert.ToBoolean(Session["IsDischargeDeathLive"]);
    IsDischargeDeathLivePending = Convert.ToBoolean(Session["IsDischargeDeathLivePending"]);
    IsDeathYTD = Convert.ToBoolean(Session["IsDeathYTD"]);
    IsDeathYTDPending = Convert.ToBoolean(Session["IsDeathYTDPending"]);
    IsDeathDetected = Convert.ToBoolean(Session["IsDeathDetected"]);
    IsDeathDetectedPending = Convert.ToBoolean(Session["IsDeathDetectedPending"]);
    IsDeathDiagnosed = Convert.ToBoolean(Session["IsDeathDiagnosed"]);
    IsDeathDiagnosedPending = Convert.ToBoolean(Session["IsDeathDiagnosedPending"]);
    IsDeathReAdmission = Convert.ToBoolean(Session["IsDeathReAdmission"]);
    IsDeathReAdmissionPending = Convert.ToBoolean(Session["IsDeathReAdmissionPending"]);

    bool sorttype = true;
    int firstRecord = (pageSize * (pageIndex - 1)) + 1;
    int lastRecord = firstRecord + modalRecordCount;

    if (modalRecordCount < 0)
    {
        firstRecord = 0;
        lastRecord = 0;
    }


    <input type="hidden" name="hdfTotalRecords" id="hdfTotalRecords" value="@totalRecordCount" />
    <div class="row">
        <div class="col-md-4">
            <div class="pageCountcontainer">
                <br />
                <span>Showing @firstRecord to @lastRecord of @totalRecordCount</span>
            </div>
        </div>

        <div class="col-md-8">
            <br />
            <ul class="pagination pull-right">
                @*========Set Previous Page Link==============*@

                @if (pageIndex != 1)
                {
                    int previousPage = pageIndex - 1;
                    <li><a onclick="GetPage('@previousPage','','0','@sortcolumn', '@sorttype','@PatientLocation','@IsCurrentIPCount', '@IsNotUpdatedLast20HoursCount', '@IsNotUpdatedLast12HoursCount', '@IsUpdatedLast12HoursCount','@NoOxygen', '@Oxygen', '@NonInvasiveVentilation','@MechanicalVentilation','@NotUpdatedAtAll','@IsNewPositive','@IsPostiveBacklog','@IsPositiveBacklogPending','@IsPositiveLive','@IsPositiveLivePending','@IsDischargeDeath','@IsDischargeDeathBacklog','@IsDischargeDeathBacklogPending','@IsDischargeDeathLive','@IsDischargeDeathLivePending','@IsDeathYTD','@IsDeathYTDPending','@IsDeathDetected','@IsDeathDetectedPending','@IsDeathDiagnosed','@IsDeathDiagnosedPending','@IsDeathReAdmission','@IsDeathReAdmissionPending')" href="javascript:void(0);" style="padding: 0.5em 1em; box-shadow:none" data-pageindex="@previousPage">Previous</a></li>

                }
                else
                {
                    <li><a href="javascript:void(0);" style="cursor:default; border: 1px solid transparent; background: transparent; color:#666 !important; padding: 0.5em 1em; box-shadow:none">Previous</a></li>
                }

                @*==============End==============*@

                @{

                    int start;
                    if (pageIndex <= 5)
                    {
                        start = 1;
                    }
                    else
                    {
                        start = pageIndex - 4;
                        int counterDifference = totalPages - start;
                        if (counterDifference < 8)
                        {
                            start = totalPages - 7;
                        }
                    }

                    for (int i = start; i < start + 8; i++)
                    {
                        if (i > totalPages) { continue; }

                        if (i > 0)
                        {
                            string linkID = "pglink-" + i.ToString();


                            if (i == pageIndex)
                            {

                                //current page
                                <li id="@linkID"><span style="border: 1px solid #979797; background:linear-gradient(to bottom, #fff 0%, #dcdcdc 100%); box-sizing: border-box; min-width: 1.5em; padding: 0.5em 1em; margin-left: 2px; text-align: center; text-decoration:none !important; cursor:pointer">@i</span></li>
                            }
                            else
                            {
                                if (IsExternalComms == true)
                                {
                                    <li id="@linkID">
                                        <a href="javascript:void(0);" onclick="GetPage('@i','','0','@sortcolumn', '@sorttype','@PatientLocation','@IsCurrentIPCount', '@IsNotUpdatedLast20HoursCount', '@IsNotUpdatedLast12HoursCount', '@IsUpdatedLast12HoursCount','@NoOxygen', '@Oxygen', '@NonInvasiveVentilation','@MechanicalVentilation','@NotUpdatedAtAll', '@IsNewPositive','@IsPostiveBacklog','@IsPositiveBacklogPending','@IsPositiveLive','@IsPositiveLivePending','@IsDischargeDeath','@IsDischargeDeathBacklog','@IsDischargeDeathBacklogPending','@IsDischargeDeathLive','@IsDischargeDeathLivePending','@IsDeathYTD','@IsDeathYTDPending','@IsDeathDetected','@IsDeathDetectedPending','@IsDeathDiagnosed','@IsDeathDiagnosedPending','@IsDeathReAdmission','@IsDeathReAdmissionPending')" data-pageindex="@i" style="padding-top:0.25em;!outline:none; border-radius:2px; border: 1px solid transparent;box-sizing: border-box; min-width: 1.5em; padding: 0.5em 1em; margin-left: 2px; text-align: center; text-decoration:none !important; cursor:pointer">@i</a>
                                    </li>
                                }
                                else if (IsBreathing == true)
                                {
                                    <li id="@linkID">
                                        <a href="javascript:void(0);" onclick="GetPage('@i','','0','@sortcolumn', '@sorttype','@PatientLocation','@IsCurrentIPCount', '@IsNotUpdatedLast20HoursCount', '@IsNotUpdatedLast12HoursCount', '@IsUpdatedLast12HoursCount','@NoOxygen', '@Oxygen', '@NonInvasiveVentilation','@MechanicalVentilation','@NotUpdatedAtAll','@IsNewPositive','@IsPostiveBacklog','@IsPositiveBacklogPending','@IsPositiveLive','@IsPositiveLivePending','@IsDischargeDeath','@IsDischargeDeathBacklog','@IsDischargeDeathBacklogPending','@IsDischargeDeathLive','@IsDischargeDeathLivePending','@IsDeathYTD','@IsDeathYTDPending','@IsDeathDetected','@IsDeathDetectedPending','@IsDeathDiagnosed','@IsDeathDiagnosedPending','@IsDeathReAdmission','@IsDeathReAdmissionPending')" data-pageindex="@i" style="padding-top:0.25em;!outline:none; border-radius:2px; border: 1px solid transparent;box-sizing: border-box; min-width: 1.5em; padding: 0.5em 1em; margin-left: 2px; text-align: center; text-decoration:none !important; cursor:pointer">@i</a>
                                    </li>
                                }
                            }
                        }
                    }


                    @*========Set Next Page Link==============*@

                if (pageIndex != totalPages)
                {
                    int nextPage = pageIndex + 1;
                    <li><a onclick="GetPage('@nextPage','','0','@sortcolumn', '@sorttype','@PatientLocation','@IsCurrentIPCount', '@IsNotUpdatedLast20HoursCount', '@IsNotUpdatedLast12HoursCount', '@IsUpdatedLast12HoursCount','@NoOxygen', '@Oxygen', '@NonInvasiveVentilation','@MechanicalVentilation','@NotUpdatedAtAll','@IsNewPositive','@IsPostiveBacklog','@IsPositiveBacklogPending','@IsPositiveLive','@IsPositiveLivePending','@IsDischargeDeath','@IsDischargeDeathBacklog','@IsDischargeDeathBacklogPending','@IsDischargeDeathLive','@IsDischargeDeathLivePending','@IsDeathYTD','@IsDeathYTDPending','@IsDeathDetected','@IsDeathDetectedPending','@IsDeathDiagnosed','@IsDeathDiagnosedPending','@IsDeathReAdmission','@IsDeathReAdmissionPending')" data-pageindex="@nextPage" href="javascript:void(0);" style="box-sizing:border-box; padding: 0.5em 1em; min-width:1.5em; margin-left:2px; text-align:center; text-decoration:none !important; border:1px solid transparent; border-radius: 2px;">Next</a></li>
                }
                else
                {
                    <li><a class="next-problem" href="javascript:void(0);" style="cursor:default; border: 1px solid transparent; background: transparent; color:#666 !important; padding: 0.5em 1em; box-shadow:none">Next</a></li>
                }
                @*==============End==============*@

                }
            </ul>

        </div>

    </div>


}


